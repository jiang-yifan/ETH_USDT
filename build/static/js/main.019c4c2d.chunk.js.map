{"version":3,"sources":["App/components/App/App.tsx","App/components/App/App.styles.ts","index.tsx"],"names":["Decimals","UnconnectedApp","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","walletAddress","toAddress","balance","amount","comment","disabled","signer","contract","getBalance","address","balanceOf","then","setState","toNumber","handleToAddress","event","target","value","handleAmount","handleComment","handleSubmit","_this$state","transfer","bigNumberify","parseFloat","Math","pow","alert","concat","fetch","method","body","JSON","stringify","from","catch","window","ethereum","enable","_ref","slicedToArray","Web3Provider","getSigner","Contract","abi","inherits","createClass","key","classes","_this$state2","react","className","container","Typography","paragraph","htmlFor","field","TextField","fullWidth","onChange","Button","variant","color","onClick","button","React","withStyles","_","createStyles","@global","html","height","minHeight","#root","img","display","a","textDecoration","marginTop","padding","wordBreak","maxWidth","margin","ReactDOM","render","react_default","createElement","MuiThemeProvider_default","theme","createMuiTheme","CssBaseline_default","App","document","getElementById"],"mappings":"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","file":"static/js/main.019c4c2d.chunk.js","sourcesContent":["import * as React from 'react'\nimport withStyles, { WithStyles } from '@material-ui/core/styles/withStyles'\nimport styles from './App.styles'\nimport { Button, Typography } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport { Web3Provider } from 'ethers/providers'\nimport { Contract, Signer } from 'ethers'\nimport { abi } from './abi.json'\nimport { bigNumberify } from 'ethers/utils'\n\ninterface IAppProps extends IAppOwnProps, WithStyles {}\n\ninterface IAppOwnProps {}\n\nconst Decimals = 6\n\nexport class UnconnectedApp extends React.PureComponent<IAppProps> {\n  state = {\n    walletAddress: '',\n    toAddress: '',\n    balance: 0,\n    amount: '',\n    comment: '',\n    disabled: false\n  }\n\n  signer?: Signer\n  contract?: Contract\n\n  constructor(props: IAppProps) {\n    super(props)\n    if (window.ethereum) {\n      window.ethereum.enable().then(([address]) => {\n        this.signer = new Web3Provider(window.ethereum).getSigner()\n        this.contract = new Contract(\n          '0xdac17f958d2ee523a2206206994597c13d831ec7',\n          abi,\n          this.signer\n        )\n        this.getBalance(address)\n        this.setState({ walletAddress: address })\n      })\n    }\n  }\n\n  getBalance = (address: string) => {\n    this.contract!.balanceOf(address).then(balance => {\n      this.setState({ balance: balance.toNumber() })\n    })\n  }\n\n  handleToAddress = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    this.setState({\n      toAddress: event.target.value\n    })\n  }\n\n  handleAmount = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    this.setState({\n      amount: event.target.value\n    })\n  }\n\n  handleComment = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    this.setState({\n      comment: event.target.value\n    })\n  }\n\n  handleSubmit = () => {\n    const { toAddress, amount, walletAddress, comment } = this.state\n    this.setState({ disabled: true })\n    this.contract!.transfer(\n      toAddress,\n      bigNumberify(parseFloat(amount) * Math.pow(10, Decimals))\n    )\n      .then(() => {\n        this.setState({\n          disabled: false,\n          toAddress: '',\n          balance: 0,\n          amount: '',\n          comment: ''\n        })\n        alert(`Sent ${amount} to ${toAddress}`)\n        this.getBalance(this.state.walletAddress)\n        fetch('/results', {\n          method: 'post',\n          body: JSON.stringify({\n            toAddress,\n            amount,\n            comment,\n            from: walletAddress\n          })\n        })\n      })\n      .catch(() => {\n        this.setState({\n          disabled: false\n        })\n      })\n  }\n\n  render() {\n    const { classes } = this.props\n    const {\n      walletAddress,\n      toAddress,\n      amount,\n      balance,\n      comment,\n      disabled\n    } = this.state\n    return (\n      <div className={classes.container}>\n        <Typography>Your Ethereum Address:</Typography>\n        <Typography paragraph> {walletAddress}</Typography>\n        <Typography>Your USDT Balance:</Typography>\n        <Typography>{balance / Math.pow(10, Decimals)}</Typography>\n        <label htmlFor=\"\" className={classes.field}>\n          <Typography>Usdt to Send:</Typography>\n          <TextField fullWidth value={amount} onChange={this.handleAmount} />\n        </label>\n        <label htmlFor=\"\" className={classes.field}>\n          <Typography>To Address:</Typography>\n          <TextField\n            fullWidth\n            value={toAddress}\n            onChange={this.handleToAddress}\n          />\n        </label>\n        <label htmlFor=\"\" className={classes.field}>\n          <Typography>Comment:</Typography>\n          <TextField fullWidth value={comment} onChange={this.handleComment} />\n        </label>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!amount || !toAddress || disabled}\n          onClick={this.handleSubmit}\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(UnconnectedApp)\n","import createStyles from '@material-ui/core/styles/createStyles'\nimport { Theme } from '@material-ui/core'\n\n// TODO update font\nexport default (_: Theme) =>\n  createStyles({\n    '@global': {\n      html: {\n        height: '100%'\n      },\n      body: {\n        height: '100%',\n        minHeight: '100%'\n      },\n      '#root': {\n        height: '100%',\n        minHeight: '100%'\n      },\n      img: {\n        display: 'block'\n      },\n      a: {\n        textDecoration: 'none'\n      }\n    },\n    container: {\n      marginTop: 24,\n      padding: '0 12px',\n      wordBreak: 'break-all',\n      maxWidth: 400,\n      margin: 'auto'\n    },\n    field: {\n      marginTop: 18,\n      display: 'block'\n    },\n    button: {\n      marginTop: 20\n    }\n  })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/components/App/App'\nimport CssBaseline from '@material-ui/core/CssBaseline/CssBaseline'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport { createMuiTheme } from '@material-ui/core'\n\nconst render = () => {\n  ReactDOM.render(\n    <MuiThemeProvider theme={createMuiTheme()}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n"],"sourceRoot":""}